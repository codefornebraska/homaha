[{"C:\\Projects\\CodeForNebraska\\homaha\\src\\index.js":"1","C:\\Projects\\CodeForNebraska\\homaha\\src\\reportWebVitals.js":"2","C:\\Projects\\CodeForNebraska\\homaha\\src\\App.js":"3","C:\\Projects\\CodeForNebraska\\homaha\\src\\apolloClient.js":"4","C:\\Projects\\CodeForNebraska\\homaha\\src\\components\\Header.js":"5","C:\\Projects\\CodeForNebraska\\homaha\\src\\components\\Shelter.js":"6"},{"size":938,"mtime":1612232854472,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1610593390088,"results":"9","hashOfConfig":"8"},{"size":8020,"mtime":1612237101350,"results":"10","hashOfConfig":"8"},{"size":346,"mtime":1611708757219,"results":"11","hashOfConfig":"8"},{"size":1153,"mtime":1611206001130,"results":"12","hashOfConfig":"8"},{"size":2435,"mtime":1612236500108,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19m8j48",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},"C:\\Projects\\CodeForNebraska\\homaha\\src\\index.js",[],"C:\\Projects\\CodeForNebraska\\homaha\\src\\reportWebVitals.js",[],["29","30"],"C:\\Projects\\CodeForNebraska\\homaha\\src\\App.js",[],"C:\\Projects\\CodeForNebraska\\homaha\\src\\apolloClient.js",[],"C:\\Projects\\CodeForNebraska\\homaha\\src\\components\\Header.js",[],["31","32"],"C:\\Projects\\CodeForNebraska\\homaha\\src\\components\\Shelter.js",["33","34"],"import React from 'react';\r\nimport {Typography, makeStyles} from \"@material-ui/core\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport {Phone} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    maxWidth: 900,\r\n    width: '100%',\r\n    flexDirection: 'column',\r\n    margin: '0 auto',\r\n    marginBottom: 20,\r\n    padding: 20\r\n  },\r\n  stats: {\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  statColumn: {\r\n    marginRight: 20,\r\n  },\r\n  phone: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center'\r\n  }\r\n}))\r\n\r\nexport default function Shelter(props) {\r\n  const shelter = props.shelter\r\n  const classes = useStyles();\r\n\r\n  const yesResponse = (\r\n    <span style={{color: 'lightgreen'}}>\r\n            Yes\r\n        </span>\r\n  )\r\n\r\n  const noResponse = (\r\n    <span style={{color: 'red'}}>\r\n            No\r\n        </span>\r\n  )\r\n\r\n  return (\r\n    <Card className={classes.card} gutterbottom>\r\n      <div>\r\n        <Typography variant={'h5'}>{shelter.name}</Typography>\r\n        <div className={classes.phone}>\r\n          <Typography style={{paddingRight: 20}}>{shelter.phone}</Typography>\r\n          <a href={'tel:' + shelter.phone} style={{color: 'white'}}><Phone/></a>\r\n        </div>\r\n      </div>\r\n      <div>{shelter.address}</div>\r\n      <Typography color={shelter.availableCapacity < 1 ? 'error' : 'primary'} variant={'h5'} component={'h5'}>Available\r\n        beds: {shelter.availableCapacity}</Typography>\r\n      <br/>\r\n      <div className={classes.stats}>\r\n        <div className={classes.statColumn}>\r\n          <div>\r\n            Allow Intox: {shelter.allowIntox ? yesResponse : noResponse}\r\n           </div>\r\n          <div>\r\n            Allow Narcotic: {shelter.allowNarcotic ? yesResponse : noResponse}\r\n          </div>\r\n        </div>\r\n        <div className={classes.statColumn}>\r\n          <div>\r\n            Allow Single Male: {shelter.allowsSingleMale ? yesResponse : noResponse}\r\n          </div>\r\n          <div>\r\n            Allow Family Male: {shelter.allowFamilyMale ? yesResponse : noResponse}\r\n          </div>\r\n          <div>\r\n            Allow Female: {shelter.allowsFemale ? yesResponse : noResponse}\r\n          </div>\r\n          <div>\r\n            Allow Children: {shelter.allowsChildren ? yesResponse : noResponse}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"35","replacedBy":"39"},{"ruleId":"37","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":3,"column":15,"nodeType":"43","messageId":"44","endLine":3,"endColumn":31},{"ruleId":"41","severity":1,"message":"45","line":6,"column":7,"nodeType":"43","messageId":"44","endLine":6,"endColumn":12},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],["46"],["47"],"no-unused-vars","'MuiThemeProvider' is defined but never used.","Identifier","unusedVar","'theme' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]